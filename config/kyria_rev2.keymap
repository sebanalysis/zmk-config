/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// https://zmk.dev/docs/codes/keyboard-keypad
// https://zmk.dev/docs/behaviors/mod-morph
// https://github.com/sebanalysis/zmk-config/actions

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    // macros {
    //     zed_em_kay: zed_em_kay {
    //         label = "ZM_zed_em_kay";
    //         compatible = "zmk,behavior-macro";
    //         #binding-cells = <0>;
    //         bindings
    //             = <&macro_press &kp LSHFT>
    //             , <&macro_tap &kp Z &kp M &kp K>
    //             , <&macro_release &kp LSHFT>
    //             ;
    //     };
    // };


    behaviors {
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MOD_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LSHIFT LSHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC         &kp Q           &kp W       &kp F       &kp P       &kp B                                                       &kp J       &kp L       &kp U           &kp Y       &kp SEMI       &kp DEL
                &kp TAB         &kp A           &kp R       &kp S       &kp T       &kp G                                                       &kp M       &kp N       &kp E           &kp I       &kp O          &kp SQT
                &mo 4           &kp Z           &kp X       &kp C       &kp D       &kp V       &kp LGUI    &kp SPACE   &trans      &kp RET     &kp K       &kp H       &kp COMMA       &kp DOT     &kp SLASH      &mo 3
                                                            &kp RET     &mo 2       &kp LSHFT   &kp LCTRL   &kp LALT    &kp RALT    &kp BSPC    &kp SPACE   &mo 1        &kp RET
        >;      
        sensor-bindings = <&inc_dec_kp A B>;
        };

        one {
            bindings = <
                &kp GRAVE       &none           &kp LBRC    &kp RBRC    &none       &none                                                    &none        &none          &none         &none       &kp UNDER       &trans
                &none           &kp LBKT        &kp RBKT    &kp LPAR    &kp RPAR    &none                                                    &none        &kp EXCL       &kp PIPE      &kp TILDE   &kp EQUAL       &none 
                &none           &none           &none       &none       &none       &none    &trans       &trans      &trans      &trans     &none        &kp HASH       &none         &none       &kp BSLH        &none 
                                                            &trans      &trans      &trans   &trans       &trans      &trans      &trans     &trans       &trans         &trans                                        
            >;
        };  

        two {
                bindings = <
                &kp GRAVE       &none       &none       &none       &none       &none                                                      &kp CARET        &kp N7      &kp N8          &kp N9      &kp KP_MINUS       &kp DEL
                &none           &kp AT      &kp PRCNT   &kp AMPS    &kp DLLR    &none                                                      &kp KP_PLUS      &kp N4      &kp N5          &kp N6      &kp KP_DOT         &none  
                &none           &none       &none       &none       &kp BSLH    &none        &trans     &trans      &trans      &trans     &kp KP_ASTERISK  &kp N1      &kp N2          &kp N3      &kp KP_SLASH       &none  
                                                        &trans      &none       &trans       &trans     &trans      &trans      &trans     &trans           &kp N0      &trans                                             
            >;
        };

        three {
            bindings = <
                &none       &none    &none       &none       &none       &none                                                       &none       &kp F9      &kp F10         &kp F11      &kp F12        &none
                &none       &none    &none       &none       &none       &none                                                       &none       &kp F5      &kp F6          &kp F7       &kp F8         &none
                &none       &none    &none       &none       &none       &none      &trans       &trans      &trans      &trans      &none       &kp F1      &kp F2          &kp F3       &kp F4         &none
                                                &trans      &trans      &trans      &trans       &trans      &trans      &trans      &trans      &trans      &none                                            
            >;
        };

        four {
            bindings = <
                &kp C_VOL_UP    &kp C_BRI_UP    &none       &none       &none       &none                                                       &none       &none       &kp PG_UP   &kp PG_DN       &none       &none                
                &kp C_VOL_DN    &kp C_BRI_DN    &none       &none       &none       &none                                                       &kp HOME    &kp LEFT    &kp UP          &kp DOWN    &kp RIGHT       &kp END    
                &none           &kp C_MUTE      &none       &none       &none       &none       &trans       &trans      &trans   &trans        &none        &none       &none          &none       &none           &none            
                                                            &trans      &trans      &trans      &trans       &trans      &trans   &trans        &trans       &trans      &none    
            >;
        }; 
    };
};

//          _layer {
//               bindings = <
//               &none          &none            &none       &none       &none       &none                                                   &none          &none           &none       &none       &none       &none    
//               &none          &none            &none       &none       &none       &none                                                   &none          &none           &none       &none       &none       &none    
//               &none          &none            &none       &none       &none       &none       &trans       &trans      &trans   &trans    &none          &none           &none       &none       &none       &none    
//                                                           &trans      &trans      &trans      &trans       &trans      &trans   &trans    &trans         &trans         &trans    
//          >;
//          }; 
